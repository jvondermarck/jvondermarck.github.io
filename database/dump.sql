BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "migrations" ("id" integer not null primary key autoincrement, "migration" varchar not null, "batch" integer not null);
INSERT INTO migrations VALUES(40,'2019_12_14_000001_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(41,'2020_10_12_163249_create_user_eloquents_table',1);
INSERT INTO migrations VALUES(42,'2021_12_06_131134_create_articles_table',1);
INSERT INTO migrations VALUES(43,'2022_03_02_205945_create_comments_table',1);
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer not null primary key autoincrement, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "UserEloquent" ("user_id" integer not null primary key autoincrement, "login" varchar not null, "password" varchar not null, "admin" tinyint(1) not null);
INSERT INTO UserEloquent VALUES(1,'juju','$2y$10$oCw3TmtYbthxS0Wyuh41TOCabO2JFEamvbOW7lH9dAraNcnN8hJDu',1);
INSERT INTO UserEloquent VALUES(2,'lola','$2y$10$1PLhjcE1l0wH3JslNtgv2ed.ReidFt5YUpE/gFWV/zmwWLkrxPVB.',0);
CREATE TABLE IF NOT EXISTS "Article" ("id" integer not null primary key autoincrement, "auteur" varchar not null, "titre" varchar not null, "phrase" varchar not null, "contenu" varchar not null, "statut" tinyint(1) not null, "last_publi" DATETIME not null, "last_modif" DATETIME not null, foreign key("auteur") references "UserEloquent"("login") on delete cascade);
INSERT INTO Article VALUES(1,'juju','Issue','Bug 1','There is an issue on branch main',1,'2022-03-04 16:07:02','2022-03-04 16:07:02');
INSERT INTO Article VALUES(2,'lola','Fuck there is a bug','Please','Come onnnn',1,'2022-03-04 16:08:57','2022-03-04 16:08:57');
CREATE TABLE IF NOT EXISTS "Comment" ("id" integer not null primary key autoincrement, "article_id" integer not null, "user_id" integer not null, "comment" varchar not null, "last_publi" date not null, "last_modif" date not null, foreign key("article_id") references "Article"("id") on delete cascade, foreign key("user_id") references "UserEloquent"("login") on delete cascade);
INSERT INTO Comment VALUES(1,1,'juju','I need to merge ?','2022-03-04 16:07:22','2022-03-04 16:07:22');
INSERT INTO Comment VALUES(2,1,'lola','U should not, I got the same problem','2022-03-04 16:08:27','2022-03-04 16:08:27');
INSERT INTO Comment VALUES(3,2,'juju','I''m cominggg','2022-03-04 16:09:38','2022-03-04 16:09:38');
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('migrations',43);
INSERT INTO sqlite_sequence VALUES('UserEloquent',2);
INSERT INTO sqlite_sequence VALUES('Article',2);
INSERT INTO sqlite_sequence VALUES('Comment',3);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE UNIQUE INDEX "usereloquent_login_unique" on "UserEloquent" ("login");
COMMIT;
